# RequestAuthentication provides a way of setting up JWT providers that we can use for authentication
# this will allow us to specify what are the 3rd party libraries we want to use to handle the auth
# this example will use firebase as an issuer so "istio" can use it to validate the authentication
apiVersion: security.istio.io/v1beta1
kind: RequestAuthentication
metadata:
  name: firebase-authn
  namespace: retail-store
spec:
  # Which Pods will have this "RequestAuthorization" applied to it
  selector:
    matchLabels:
      auth: custom
  jwtRules:
    - issuer: "https://securetoken.google.com/f2-dev-91107"
      jwksUri: "https://www.googleapis.com/identitytoolkit/v3/relyingparty/publicKeys"
---
# Enforce that all incoming requests to your service have a valid JWT
apiVersion: security.istio.io/v1beta1
kind: AuthorizationPolicy
metadata:
  name: require-jwt
  namespace: retail-store
spec:
  # Which Pods will have this "AuthorizationPolicy" applied to it
  selector:
    matchLabels:
      auth: custom
  action: ALLOW
  rules:
    - from:
        - source:
            requestPrincipals: ["*"]
    # - when:
    #     - key: request.auth.claims[email_verified]
    #       values: ["true"]
